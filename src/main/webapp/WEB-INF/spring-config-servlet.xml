<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util" 
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation=
 "http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 

">
    <!-- Use @Component annotations for bean definitions -->
    <context:component-scan base-package="Stb"/>
    
    <!-- Use @Controller annotations for MVC controller definitions -->
    <mvc:annotation-driven />
    <!--sec-->
    <bean id="dataSourceSec"  
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <property name="driverClassName" value="oracle.jdbc.OracleDriver" />  
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE" />  
        <property name="username" value="Securite" />  
        <property name="password" value="sec" /> 
    
        
    </bean>  
 
    <bean id="sessionFactorySec" primary="true"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSourceSec" />
        <property name="annotatedClasses">
            <list>
                <value>Stb.model.Sec.Client</value>
                <value>Stb.model.Sec.Abonnement</value>
                <value>Stb.model.Sec.Operation</value> 
                <value>Stb.model.Sec.ProduitService</value>  
                <value>Stb.model.Sec.Role</value>
                <value>Stb.model.Sec.UserStatus</value>    
                <value>Stb.model.Sec.Users</value>                 
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql:false}</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
 
            </props>
        </property>
    </bean>
    
    <!-- Add Transaction support -->
    <bean id="txManagerSec"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactorySec" />
    </bean>
    
    <!-- Use @Transaction annotations for managing transactions -->
    <tx:annotation-driven transaction-manager="txManagerSec"/>
   
    <bean id="SecDao" class="Stb.dao.SecDaoImpl" primary="true">
        <property name="sessionFactory" ref="sessionFactorySec" />
    </bean>
    
     
    <bean id="SecServices" class="Stb.services.SecServicesImpl"></bean>
    
    <!--************ REF ************-->
    <bean id="dataSourceRef"  
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <property name="driverClassName" value="oracle.jdbc.OracleDriver" />  
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE" />  
        <property name="username" value="ref" />  
        <property name="password" value="ref" /> 
    
        
    </bean> 
    
    
    <bean id="sessionFactoryRef" primary="true"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSourceRef" />
        <property name="annotatedClasses">
            <list>
                <value>Stb.model.Ref.Activite</value>
                <value>Stb.model.Ref.Agence</value>
                <value>Stb.model.Ref.Banque</value> 
                <value>Stb.model.Ref.Devise</value>  
                <value>Stb.model.Ref.ModePaiement</value>
                <value>Stb.model.Ref.Pays</value>    
                <value>Stb.model.Ref.TPiece</value>    
                <value>Stb.model.Ref.TypeDossierAva</value>    
                             
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql:false}</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
 
            </props>
        </property>
    </bean>
    
     <!-- Add Transaction support -->
    <bean id="txManagerRef"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactoryRef" />
    </bean>
    
     <!-- Use @Transaction annotations for managing transactions -->
    <tx:annotation-driven transaction-manager="txManagerRef"/>
   
<!--  ***************** Ã  remplaer par mes dao
  <bean id="SecDao" class="Stb.dao.SecDaoImpl" primary="true">
        <property name="sessionFactory" ref="sessionFactorySec" />
    </bean>-->
    
     
    <bean id="SecServices" class="Stb.services.SecServicesImpl"></bean>
    
    <!--Gen-->
    <bean id="dataSourceGen"  
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <property name="driverClassName" value="oracle.jdbc.OracleDriver" />  
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE" />  
        <property name="username" value="gen" />  
        <property name="password" value="gen" /> 
    </bean>  
  

    <bean id="sessionFactoryGen" primary="true"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="configLocation"   value="classpath:hibernategen.cfg.xml" />
        <property name="dataSource" ref="dataSourceGen" />
        <property name="annotatedClasses">
            <list>
                <value>Stb.model.Gen.MessageRecus</value>            
                <value>Stb.model.Gen.MswMtxxx</value> 
                <value>Stb.model.Gen.MswNomField</value> 
                <value>Stb.model.Gen.MswRecepMsg</value>  
                <value>Stb.model.Gen.MswSequence</value>  
                <value>Stb.model.Gen.MswUtlField</value>
                <value>Stb.model.Gen.MswUtlMtxxx</value> 
                <value>Stb.model.Gen.MswUtlSequence</value>  
                <value>Stb.model.Gen.OperationTitre</value>
                              
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.generate_statistics">true</prop>
            </props>
        </property>
    </bean>
    <bean id="txManagerGen"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactoryGen" />
    </bean>
    
    <bean id="GenDao" class="Stb.dao.GenDaoImpl" primary="true">
        <property name="sessionFactory" ref="sessionFactoryGen" />
    </bean>
    
    <bean id="GenServices" class="Stb.services.GenServicesImpl"></bean>
    
    <tx:annotation-driven transaction-manager="txManagerGen"/>

    
    <!--Domi-->
    <bean id="dataSourceDomi"  
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <property name="driverClassName" value="oracle.jdbc.OracleDriver" />  
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE" />  
        <property name="username" value="domi" />  
        <property name="password" value="domi" />  
    </bean>  
  

    <bean id="sessionFactorydomi" primary="true"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSourceDomi" />
        <property name="annotatedClasses">
            <list>
                <value>Stb.model.Domi.ImageDepotDomiciliation</value>
                <value>Stb.model.Domi.AvoirTitre</value>
                <value>Stb.model.Domi.EmargementImputationTitre</value>
                <value>Stb.model.Domi.EmargementReglementTitre</value>
                <value>Stb.model.Domi.StatCaParMois</value>
                <value>Stb.model.Domi.VueTimeline</value>
                <value>Stb.model.Ref.Titre</value> 
                <value>Stb.model.Domi.Apurement</value>   
                 
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
            </props>
        </property>
    </bean>
    <bean id="txManagerdomi"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactorydomi" />
    </bean>
    
    <bean id="DomiDao" class="Stb.dao.DomiDaoImpl">
        <property name="sessionFactory" ref="sessionFactorydomi" />
    </bean>
    <bean id="DomiServices" class="Stb.services.DomiServicesImpl"></bean>
    
    <tx:annotation-driven transaction-manager="txManagerdomi"/>
    <!--CDI-->
    <bean id="dataSourceCdi"  
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <property name="driverClassName" value="oracle.jdbc.OracleDriver" />  
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE" />  
        <property name="username" value="cdi" />  
        <property name="password" value="cdi" />  
    </bean>  
  

    <bean id="sessionFactoryCdi" primary="true"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSourceCdi" />
        <property name="annotatedClasses">
            <list>
                <value>Stb.model.Cdi.TypeEngagement</value> 
                <value>Stb.model.Cdi.CredocImp</value>    
                             
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
            </props>
        </property>
    </bean>
    <bean id="txManagerCdi"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactoryCdi" />
    </bean>
    
    <bean id="CdiDao" class="Stb.dao.CdiDaoImpl">
        <property name="sessionFactory" ref="sessionFactoryCdi" />
    </bean>
   
    <bean id="CdiServices" class="Stb.services.CdiServicesImpl"></bean>  
     
    <tx:annotation-driven transaction-manager="txManagerCdi"/>


    <!--REF-->
    <bean id="dataSourceRef"  
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <property name="driverClassName" value="oracle.jdbc.OracleDriver" />  
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE" />  
        <property name="username" value="ref" />  
        <property name="password" value="ref" />  
    </bean>  
  
    <bean id="sessionFactoryRef" primary="true"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSourceRef" />
        <property name="annotatedClasses">
            <list>
                <value>Stb.model.Ref.Agence             </value>    
                <value>Stb.model.Ref.AgenceEtrangere    </value>  
                <value>Stb.model.Ref.Banque             </value> 
                <value>Stb.model.Ref.BanqueEtrangere    </value>
                <value>Stb.model.Ref.CoursJoursDeviseBb </value>
                <value>Stb.model.Ref.Devise             </value>    
                <value>Stb.model.Ref.ModeDeLivraison    </value>
                <value>Stb.model.Ref.ModeDeReglement    </value>
                <value>Stb.model.Ref.Titre   </value>
                <value>Stb.model.Ref.Pays               </value>
                <value>Stb.model.Ref.ModeDeReglement  </value>
                <value>Stb.model.Ref.CoursJoursDeviseBb</value>   
                                    
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
            </props>
        </property>
    </bean>
    
    <bean id="txManagerRef"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactoryRef" />
    </bean>
    
    <tx:annotation-driven transaction-manager="txManagerRef"/>
    
    <bean id="RefDao" class="Stb.dao.RefDaoImpl">
        <property name="sessionFactory" ref="sessionFactoryRef" />
    </bean>
         
    <bean id="RefServices" class="Stb.services.RefServicesImpl"></bean>
    
    
    
    
    <mvc:default-servlet-handler/>
</beans>